version: "3.7"
services:
  db:
    image: postgres:13.1
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    container_name: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      APP_DB_USER: postgres
      APP_DB_PASS: postgres
      APP_DB_NAME: test
    volumes:
      # [+] point data to local folder for persistent data
      - ./external/database/volumes/data:/var/lib/postgresql/data
      # [+] point to your backup for data restoration
      - ./external/database/volumes/db_backup:/db_backup
      # [+] point docker to directory with your config
      # - ./external/database/db_config:/db_config
      # [+] point to your postgres init scripts (folder or file)
      # docker-entrypoint-initdb.d normally only accepy .sql file to be executed
      # otherwise, it returns permission denied
      - ./external/database/scripts:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - users

  user_svc:
    container_name: user_svc
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8000:8000
    environment:
      APP_DB_USER: postgres
      APP_DB_NAME: test
      APP_DB_PASS: postgres
      DB_TYPE: postgres
      DB_DRIVER: postgres
      DB_HOST: db
      DB_PORT: 5432
      APP_PORT: 8000
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    networks:
      - users

  caddy:
    container_name: caddy
    restart: unless-stopped
    # image: nuttchai/caddy:1.0.0 # use this image if you want to use caddy locally
    image: nuttchai/caddy-production:1.0.4 # use this image if you want to use caddy in production
    depends_on:
      - user_svc
      - db
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./external/proxy/caddy/caddy_data:/data
      - ./external/proxy/caddy/caddy_config:/config

volumes:
  caddy_data:
    external: true
  caddy_config:

networks:
  users:
